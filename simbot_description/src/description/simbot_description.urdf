<?xml version="1.0"?>
<robot name="simbot" xmlns:xacro="http://ros.org/wiki/xacro">

  <xacro:arg name="use_sim" default="false"/>

  <xacro:include filename="$(find simbot_description)/src/description/simbot_properties.urdf"/>
  <xacro:include filename="$(find simbot_description)/src/description/simbot_util.urdf"/>
  <xacro:include filename="$(find simbot_description)/src/description/simbot.gazebo"/>
  <xacro:include filename="$(find realsense2_description)/urdf/_d415.urdf.xacro"/>

  <!-- Robot Footprint -->
  <link name="base_footprint"/>

  <!-- Robot Base -->
  <link name="base_link">
    <visual>
      <geometry>
        <cylinder radius="${base_radius}" length="${base_height}"/> 
       
      </geometry>
      <material name="PaperYellow">
        <color rgba="1.0 1.0 0.9 1.0"/>
      </material>
    </visual>

    <collision>
      <geometry>
        <cylinder radius="${base_radius}" length="${base_height}"/>
      </geometry>
    </collision>

    <xacro:cylinder_inertia m="5" r="${base_radius}" h="${base_height}"/>
  </link>

  <joint name="base_joint" type="fixed">
    <parent link="base_footprint"/>
    <child link="base_link"/>
    <origin xyz="0.0 0.0 ${(wheel_radius)}" rpy="0 0 0"/>
  </joint>

    <!-- Robot Body -->
  <link name="body_link">

    <origin xyz="0 0 0" rpy="0 0 0"/>
    <visual>
      <geometry>
        <cylinder radius="0.02" length="${body_height}"/> 
      </geometry>
      <material name="BodyWhite">
        <color rgba="0.8 0.8 0.8 1.0"/>
      </material>
    </visual>

    <collision>
      <geometry>
        <cylinder radius="0.02" length="${body_height}"/>   
      </geometry>
    </collision>
    <xacro:cylinder_inertia m="0.5" r="0.02" h="${body_height}"/> 

  </link>

  <joint name="body_joint" type="fixed">
    <parent link="base_link"/>
    <child link="body_link"/>
    <origin xyz="0.0 0.0 ${(body_height/2+base_height/2)}" rpy="0 0 0"/>
  </joint>

  <xacro:wheel prefix="drivewhl_l" x_reflect="-1" y_reflect="1" />
  <xacro:wheel prefix="drivewhl_r" x_reflect="-1" y_reflect="-1" />

    <!-- Caster Wheel -->
  <link name="front_caster">
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <visual>
      <geometry>
        <sphere radius="${caster_radius}"/>
      </geometry>
      <material name="Black">
        <color rgba="0.0 0.0 0.0 1.0"/>
      </material>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <sphere radius="${caster_radius}"/>
      </geometry>
    </collision>

    <xacro:sphere_inertia m="0.001" r="${caster_radius}"/>
  </link>

      <!-- Caster Wheel -->
  <link name="rear_caster">
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <visual>
      <geometry>
        <sphere radius="${caster_radius}"/>
      </geometry>
      <material name="Black">
        <color rgba="0.0 0.0 0.0 1.0"/>
      </material>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <sphere radius="${caster_radius}"/>
      </geometry>
    </collision>

    <xacro:sphere_inertia m="0.001" r="${caster_radius}"/>
  </link>

  <joint name="front_caster_joint" type="fixed">
    <parent link="base_link"/>
    <child link="front_caster"/>
    <origin xyz="${caster_xoff} 0.0 ${-(wheel_radius-caster_radius)+0.001}" rpy="0 0 0"/>
  </joint>
  
  <joint name="rear_caster_joint" type="fixed">
    <parent link="base_link"/>
    <child link="rear_caster"/>
    <origin xyz="${-caster_xoff} 0.0 ${-(wheel_radius-caster_radius)+0.001}" rpy="0 0 0"/>
  </joint>

  <!-- Lidar -->
  <link name="lidar_base_link">
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <visual>
      <origin xyz="0 0 0.015" rpy="${pi/2} 0 0"/>
      <geometry>
          <mesh filename="package://simbot_description/meshes/tim240.dae" scale="1.0 1.0 1.0"/>
      </geometry>
      <material name="Blue">
        <color rgba="0.0 0.0 1.0 1.0"/>
      </material>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.059 0.0600 0.0758"/>
      </geometry>
    </collision>

    <xacro:box_inertia m="0.15" w="0.060" h="0.0758" d="0.0595" />
  </link>



  <joint name="lidar_base_joint" type="fixed">
    <parent link="base_link"/>
    <child link="lidar_base_link"/>
    <origin xyz="${lidar_xoff} 0.0 ${lidar_zoff}" rpy="0 0 0"/>
  </joint>

  <link name="lidar_link"/>
  <joint name="lidar_joint" type="fixed">
    <parent link="lidar_base_link"/>
    <child link="lidar_link"/>
    <origin xyz="0.0 0.0 0.053" rpy="0 0 0"/>
  </joint>

  <!-- camera(s) -->
  <!-- RGB -->
  <link name="cam_rgb_link">
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <visual>
      <origin xyz="0 0 0" rpy="${pi/2} 0 ${pi/2}"/>
      <geometry>
          <cylinder radius="0.007" length="0.03"/>
      </geometry>
      <material name="Black">
        <color rgba="0.0 0.0 0.0 1.0"/>
      </material>
    </visual>

    <collision>
      <origin xyz="0 0 0" rpy="${pi/2} 0 ${pi/2}"/>
      <geometry>
        <cylinder radius="0.007" length="0.03"/>
      </geometry>
    </collision>

    <xacro:cylinder_inertia m="0.005" r="0.007" h="0.03"/>
  </link>

  <joint name="cam_rgb_base_link_joint" type="fixed">
    <parent link="base_link"/>
    <child link="cam_rgb_link"/>
    <origin xyz="${cam_rgb_xoff} 0 ${cam_rgb_zoff}" rpy="0 ${-cam_rgb_tilt} 0"/>
  </joint>

  <link name="cam_rgb_frame"/>
  <joint name="cam_rgb_joint" type="fixed">
    <parent link="cam_rgb_link"/>
    <child link="cam_rgb_frame"/>
    <origin xyz="0 0 0" rpy="0 0 0"/>
  </joint>

  <link name="cam_rgb_optical_frame"/>
  <joint name="cam_rgb_optical_joint" type="fixed">
    <parent link="cam_rgb_frame"/>
    <child link="cam_rgb_optical_frame"/>
    <origin xyz="0 0 0" rpy="-1.57 0 -1.57"/>
  </joint>
  
  <!-- Realsense -->
  <xacro:sensor_d415 name="cam_bottom" parent="base_link" use_nominal_extrinsics="$(arg use_sim)">
     <origin xyz="${cam_bottom_xoff} 0 ${cam_bottom_zoff}" rpy="0 ${-cam_bottom_tilt} 0"/>
  </xacro:sensor_d415>

  <xacro:sensor_d415 name="cam_top" parent="base_link" use_nominal_extrinsics="$(arg use_sim)">
     <origin xyz="${cam_top_xoff} 0 ${cam_top_zoff}" rpy="0 ${-cam_top_tilt} 0"/>
  </xacro:sensor_d415>
</robot>